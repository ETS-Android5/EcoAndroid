<idea-plugin>
  <id>anaribeiro.ist.EcoAndroid</id>
  <name>EcoAndroid</name>
  <vendor email="anasofiaribeiro@tecnico.ulisboa.pt">SR-Lab</vendor>

  <description><![CDATA[
<p>EcoAndroid suggests automated refactorings for reducing the energy consumption of Java Android applications. It is based on the idea of <i>energy pattern</i> and it has already been used to improve the energy efficiency of dozens of Android applications.</p>
<p><b>It currently supports the detection and correction of the following energy patterns:</b>
<ul>
<li><i>Dynamic Retry Delay</i>: increase the interval between attempts to access a resource, avoiding regular accesses to a resource that most likely went down.</li>
<li><i>Push Over Poll</i>: use push notifications instead of actively querying resources, such as polling.</li>
<li><i>Reduce Size</i>: reduce the size of the data being transferred as much as possible, therefore reducing the energy being used in the transfer.</li>
<li><i>Cache</i>: store data that is being used frequently, which results in a lower energy consumption since it reduces the amount of code executed and the number of accesses to retrieve information.</li>
<li><i>Avoid Graphics and Animations</i>: reduce the display of graphics and animations, since the use of this type of resources increases energy consumption.</li>
</ul></p>
<p>More details about these patterns can be found in <a href="https://tqrg.github.io/energy-patterns/#/">Cruz and Abreu's open catalogue of energy-related patterns in mobile applications</a>.</p>
]]></description>

    <!-- Android Studio 4.0+ -->
    <!-- see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html -->
  <idea-version since-build="192"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <depends>com.intellij.modules.platform</depends>
  <depends>com.intellij.modules.java</depends>
  <!--depends>com.intellij.java</depends-->
  <depends>org.jetbrains.android</depends>

  <extensions defaultExtensionNs="com.intellij">
    <!-- DYNAMIC RETRY DELAY  -->
    <localInspection
            language="JAVA"
            displayName="EcoAndroid: Dynamic Retry Delay Energy Pattern - switching to a dynamic wait time between resource attempts"
            groupPath="Java"
            groupBundle="messages.InspectionsBundle"
            groupKey="group.names.probable.bugs"
            enabledByDefault="true"
            level="WARNING"
            implementationClass="DynamicRetryDelay.DynamicWaitTime.DynamicWaitTimeInspection"/>
    <localInspection
            language="JAVA"
            displayName="EcoAndroid: Dynamic Retry Delay Energy Pattern - checking network connection before processing request"
            groupPath="Java"
            groupBundle="messages.InspectionsBundle"
            groupKey="group.names.probable.bugs"
            enabledByDefault="true"
            level="WARNING"
            implementationClass="DynamicRetryDelay.CheckNetwork.CheckNetworkInspection"/>
    <!-- PUSH OVER POLL  -->
    <localInspection
            language="JAVA"
            displayName="EcoAndroid: Push Over Poll Energy Pattern - info warning about Firebase Cloud Messaging"
            groupPath="Java"
            groupBundle="messages.InspectionsBundle"
            groupKey="group.names.probable.bugs"
            enabledByDefault="true"
            level="WARNING"
            implementationClass="PushOverPoll.InfoWarningFCMInspection"/>
    <!-- CACHE  -->
    <localInspection
            language="JAVA"
            displayName="EcoAndroid: Cache Energy Pattern - checking values before processing them"
            groupPath="Java"
            groupBundle="messages.InspectionsBundle"
            groupKey="group.names.probable.bugs"
            enabledByDefault="true"
            level="WARNING"
            implementationClass="Cache.CheckMetadata.CheckMetadataInspection"/>
    <localInspection
            language="JAVA"
            displayName="EcoAndroid: Cache Energy Pattern - checking layout size"
            groupPath="Java"
            groupBundle="messages.InspectionsBundle"
            groupKey="group.names.probable.bugs"
            enabledByDefault="true"
            level="WARNING"
            implementationClass="Cache.CheckLayoutSize.CheckLayoutSizeInspection"/>
    <localInspection
            language="JAVA"
            displayName="EcoAndroid: Cache Energy Pattern - SSL session caching"
            groupPath="Java"
            groupBundle="messages.InspectionsBundle"
            groupKey="group.names.probable.bugs"
            enabledByDefault="true"
            level="WARNING"
            implementationClass="Cache.SSLSessionCaching.SSLSessionCachingInspection"/>
    <localInspection
            language="JAVA"
            displayName="EcoAndroid: Cache Energy Pattern - switching to PASSIVE_PROVIDER"
            groupPath="Java"
            groupBundle="messages.InspectionsBundle"
            groupKey="group.names.probable.bugs"
            enabledByDefault="true"
            level="WARNING"
            implementationClass="Cache.PassiveProviderLocation.PassiveProviderLocationInspection"/>
    <localInspection
            language="JAVA"
            displayName="EcoAndroid: Cache Energy Pattern - adding caching mechanism to URL Connection"
            groupPath="Java"
            groupBundle="messages.InspectionsBundle"
            groupKey="group.names.probable.bugs"
            enabledByDefault="true"
            level="WARNING"
            implementationClass="Cache.URLCaching.URLCachingInspection"/>
    <!-- AVOID EXTRANEOUS GRAPHICS AND ANIMATIONS -->
    <localInspection
            language="JAVA"
            displayName="EcoAndroid: Avoid Extraneous Graphics and Animations Energy Pattern - only rendering when surface is created or when requested"
            groupPath="Java"
            groupBundle="messages.InspectionsBundle"
            groupKey="group.names.probable.bugs"
            enabledByDefault="true"
            level="WARNING"
            implementationClass="AvoidExtraneousGraphicsAndAnimations.DirtyRenderingInspection"/>
    <!-- REDUCE SIZE -->
    <localInspection
            language="JAVA"
            displayName="EcoAndroid: Reduce Size Energy Pattern - gzip compression on HTTP Request"
            groupPath="Java"
            groupBundle="messages.InspectionsBundle"
            groupKey="group.names.probable.bugs"
            enabledByDefault="true"
            level="WARNING"
            implementationClass="ReduceSize.GZIPCompressionInspection"/>

    <localInspection
            language="JAVA"
            displayName="EcoAndroid: Resource Leak"
            groupPath="Java"
            groupBundle="messages.InspectionsBundle"
            groupKey="group.names.probable.bugs"
            enabledByDefault="true"
            level="WARNING"
            implementationClass="resourceleaks.ResourceLeakInspection"/>

    <projectService serviceImplementation="resourceleaks.ResultsProcessor"></projectService>

    <codeInsight.lineMarkerProvider language="JAVA"
                                    implementationClass="resourceleaks.ResourceLeakLineMarker"/>

  </extensions>

  <actions>
    <action id="resourceleaks.actions.RunResourceLeakDetection" class="resourceleaks.actions.RunResourceLeakDetection"
            text="Run Resource Leak Detection" description="Resource Leak Analysis"
            icon="/icons/icon.svg">
      <add-to-group group-id="RunMenu" anchor="first"/>
    </action>
  </actions>







        <!-- Copyright 2000-2020 JetBrains s.r.o. and other contributors. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file. -->


</idea-plugin>